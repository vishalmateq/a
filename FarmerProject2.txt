================
|  HSQL QUERY  |
================

1]
CREATE TABLE FARMERDETAILS3 (
    FARMER_ID INT GENERATED BY DEFAULT AS IDENTITY(START WITH 100, INCREMENT BY 1) PRIMARY KEY,
    FARMER_NAME VARCHAR(25),
    CONTACT_NO VARCHAR(14),
    EMAIL VARCHAR(20),
    ADDRESS VARCHAR(50),
    CITY VARCHAR(15),
    STATE VARCHAR(15),
    PINCODE VARCHAR(10),
    ACCOUNT_NO VARCHAR(15),
    IFSC VARCHAR(15),
    AADHAR_CARD VARCHAR(46),
    PAN_CARD VARCHAR(46),
    PASSWORD VARCHAR(20),
    FARMER_WALLET INT
);

INSERT INTO FARMERDETAILS3 (FARMER_NAME, CONTACT_NO, EMAIL, ADDRESS, CITY, STATE, PINCODE, ACCOUNT_NO, IFSC, AADHAR_CARD, PAN_CARD, PASSWORD, FARMER_WALLET)
VALUES
    ('John Doe', '1234567890', 'john@example.com', '123 Main St', 'Cityville', 'Stateville', '12345', '0123456789', 'IFSC123', '1234-5678-9012', 'ABCP12345', 'secretpassword', 500),
    ('Jane Smith', '9876543210', 'jane@example.com', '456 Elm St', 'Townsville', 'Stateville', '54321', '9876543210', 'IFSC456', '5678-9012-3456', 'XYZQ56789', 'mypassword', 750),
    ('Michael Johnson', '5558889999', 'michael@example.com', '789 Oak St', 'Cityville', 'Stateville', '67890', '1230987654', 'IFSC789', '0987-6543-2109', 'LMNO12345', 'securepass', 300);
===============================================================================================================================================================================================

2]
CREATE TABLE CROP_DETAILS (
    CROP_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 301, INCREMENT BY 1) PRIMARY KEY,
    CROP_NAME VARCHAR(20) NOT NULL,
    FERTILIZER_TYPE VARCHAR(30),
    QUANTITY VARCHAR(12),
    SOIL_PH_CERTIFICATE VARCHAR(40),
    FARMER_ID INT,  
    SOLD_OR_NOT VARCHAR(10),
    FOREIGN KEY (FARMER_ID) REFERENCES FARMERDETAILS3(FARMER_ID)
); 


INSERT INTO CROP_DETAILS (CROP_NAME, FERTILIZER_TYPE, QUANTITY, SOIL_PH_CERTIFICATE, FARMER_ID, SOLD_OR_NOT)
VALUES
    ('Wheat', 'Organic', '1000 kg', 'pH 6.5', 100, 'Not Sold'),
    ('Corn', 'Chemical', '800 kg', 'pH 5.8', 101, 'Sold'),
    ('Rice', 'Organic', '1200 kg', 'pH 6.2', 102, 'Not Sold');
=================================================================================================================================================================================================

3]

CREATE TABLE BIDDER_DETAILS (
    BIDDER_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 701, INCREMENT BY 1) PRIMARY KEY,
    BIDDER_NAME VARCHAR(25),
    CONTACT_NO VARCHAR(14),
    EMAIL VARCHAR(20),
    ADDRESS VARCHAR(50),
    CITY VARCHAR(15),
    STATE VARCHAR(15),
    PINCODE VARCHAR(10),
    ACCOUNT_NO VARCHAR(15),
    IFSC VARCHAR(15),
    AADHAR_CARD VARCHAR(26),
    PAN_CARD VARCHAR(26),
    TRADING_CERTIFICATE VARCHAR(26),
    PASSWORD VARCHAR(20),
    BIDDER_WALLET INT
);




INSERT INTO BIDDER_DETAILS (BIDDER_NAME, CONTACT_NO, EMAIL, ADDRESS, CITY, STATE, PINCODE, ACCOUNT_NO, IFSC, AADHAR_CARD, PAN_CARD, TRADING_CERTIFICATE, PASSWORD, BIDDER_WALLET)
VALUES
    ('Alice Smith', '9876543210', 'alice@example.com', '123 Elm St', 'Townsville', 'Stateville', '54321', '9876543210', 'IFSC456', '1234-5678-9012', 'ABCP12345', 'TC123456', 'mypassword', 1000),
    ('Bob Johnson', '5558889999', 'bob@example.com', '456 Oak St', 'Cityville', 'Stateville', '67890', '1230987654', 'IFSC789', '5678-9012-3456', 'XYZQ56789', 'TC789012', 'securepass', 1500),
    ('Charlie Davis', '1234567890', 'charlie@example.com', '789 Maple St', 'Villagetown', 'Stateville', '12345', '0123456789', 'IFSC123', '0987-6543-2109', 'LMNO12345', 'TC567890', 'secretpass', 800);
========================================================================================================================================================================================================

4]

CREATE TABLE BIDDING_DETAILS (
	CROP_ID INT FOREIGN KEY REFERENCES CROP_DETAILS(CROP_ID),
	CROP_NAME VARCHAR(20),
	BIDDER_ID INT FOREIGN KEY REFERENCES BIDDER_DETAILS(BIDDER_ID),
	BID_AMOUNT INT
); 

INSERT INTO BIDDING_DETAILS (CROP_ID, CROP_NAME, BIDDER_ID, BID_AMOUNT)
VALUES
    (313, 'Wheat', 701, 1500),
    (314, 'Corn', 702, 1800),
    (315, 'Rice', 703, 2000);


==========================================================================================================================================================================================================
 

*******Project Member and their work*********

1]Maithali	- CropEntity, dao, dao implementation, service , testing ,  CropPages(FrontEnd) 
		  integration with frontend to backend and 

2]Roshan	- FarmerEntity , dao, dao implementation, service , testing , FarmerPage(FrontEnd)

3]Vishal 	- BiddingEntity, dao, dao implementation, service , testing , InsurancePages(FrontEnd)

4]Nikhil	- BidderEntity, dao, dao implementation, service , testing ,  BidderPages(FrontEnd)















